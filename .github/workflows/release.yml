name: "Release"
on:
  push:
    branches: [main]

jobs:
  build_and_test:
    name: "Build and Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: "20"
      - run: corepack enable
      - run: pnpm install
      - name: Build Vite-Plugin-Hash-CSP
        run: pnpm p:build
      - name: Archive production artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: package-dist
          retention-days: 30
          path: packages/vite-plugin-hash-csp/dist

      # - name: Build Documentation Site
      #   run: npm run docs:build
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ./apps/docs/out


  publish:
    runs-on: ubuntu-latest
    needs: build_and_test
    name: "Publish"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: corepack enable
      - run: pnpm install
      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          name: package-dist
          path: packages/vite-plugin-hash-csp/dist

      - uses: JS-DevTools/npm-publish@v3
        id: publish
        with:
          token: ${{ secrets.NPM_AUTH_TOKEN }}
          package: packages/vite-plugin-hash-csp

      - name: Bump version and push tag
        if: ${{ steps.publish.outputs.type }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: v${{steps.publish.outputs.version}}
          tag_prefix: vite-plugin-csp-hash_
          
      - name: Create a GitHub release
        if: ${{ steps.publish.outputs.type }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          generateReleaseNotes: true

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_test
  #   permissions: 
  #     contents: read
  #     pages: write
  #     id-token: write
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4